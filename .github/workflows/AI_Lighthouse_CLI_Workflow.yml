name: 🧠 AI Lighthouse CLI Workflow

on:
  workflow_dispatch:
    inputs:
      mode:
        description: 'Select Test Mode (1-5)'
        required: true
      base_url:
        description: 'Base URL (Required for modes 1,2,3,5)'
        required: false
      selector:
        description: 'CSS/XPath Selector'
        required: false
      urls:
        description: 'Comma-separated list of raw URLs (Only for mode 4)'
        required: false
      projectName:
        description: 'Project Name'
        required: true
      client:
        description: 'Client Name'
        required: true
      projectManager:
        description: 'Project Manager'
        required: true
      qaManager:
        description: 'QA Manager'
        required: true
      expectedLoadTime:
        description: 'Expected Load Time'
        required: true

jobs:
  lighthouse:
    name: 🔍 Run Lighthouse Audit
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout Repository
        uses: actions/checkout@v4

      # 🧠 Prepare URL Builder (Only for modes 1,2,3,5)
      - name: 🔧 Prepare URL list
        if: ${{ github.event.inputs.mode != '4' }}
        run: |
          echo "🧠 Running URL Builder..."
          export MODE=${{ github.event.inputs.mode }}
          export BASE_URL="${{ github.event.inputs.base_url }}"
          export SELECTOR="${{ github.event.inputs.selector }}"
          node core/githubTestUrlBuilder.js

      # 🔐 Validate Inputs for Mode 4
      - name: Validate Inputs for mode 4
        if: ${{ github.event.inputs.mode == '4' }}
        run: |
          echo -e "🟢 Validating inputs..."

          if [ -z "${{ github.event.inputs.urls }}" ]; then
            echo -e "❌ No URLs provided. Please provide valid URLs to proceed."
            exit 1
          fi

          urls=$(echo "${{ github.event.inputs.urls }}" | tr ',' '\n' | sed 's/^ *//g; s/ *$//g; s/^["\(]*//g; s/["\)]*$//g')

          valid_urls=()
          for url in $urls; do
            if [[ ! $url =~ ^https?:// ]]; then
              echo -e "❌ Invalid URL format: $url"
              exit 1
            else
              echo -e "✅ Valid URL: $url"
              valid_urls+=("$url")
            fi
          done

          echo -e "✅ All URLs validated successfully."

          echo "PROJECT_NAME=${{ github.event.inputs.projectName }}" >> $GITHUB_ENV
          echo "CLIENT=${{ github.event.inputs.client }}" >> $GITHUB_ENV
          echo "PROJECT_MANAGER=${{ github.event.inputs.projectManager }}" >> $GITHUB_ENV
          echo "QA_MANAGER=${{ github.event.inputs.qaManager }}" >> $GITHUB_ENV
          echo "EXPECTED_LOAD_TIME=${{ github.event.inputs.expectedLoadTime }}" >> $GITHUB_ENV
          echo "TESTFILES_LIST=${valid_urls[*]}" >> $GITHUB_ENV

      # 🚀 Run Lighthouse based on mode
      - name: 🚀 Run Lighthouse Tests for mode 4
        if: ${{ github.event.inputs.mode == '4' }}
        run: |
          echo -e "\033[1;36m📡 Starting Lighthouse audit (Raw URL mode)...\033[0m"
          node executeGithub.js
          echo -e "\033[1;32m✅ Lighthouse audit complete.\033[0m"

      - name: 🚀 Run Lighthouse Tests for modes 1,2,3,5
        if: ${{ github.event.inputs.mode != '4' }}
        run: |
          echo -e "🚀 Starting Lighthouse tests..."
          node runLighthouseAuto.js

      # ⏳ Wait for Reports
      - name: Wait for Reports
        run: |
          echo -e "⏳ Waiting for reports..."
          sleep 40

      # 📂 Move Reports to Reports_QA
      - name: Move Reports to 'Reports_QA'
        run: |
          echo -e "📦 Moving reports..."
          mkdir -p ./Reports_QA
          mv *.html ./Reports_QA/
          sleep 20
          mv *.pdf ./Reports_QA/
          mv ./results/*.csv ./Reports_QA/
          echo -e "✅ All reports moved to 'Reports_QA'."

      # ⬆️ Upload Artifacts
      - name: Upload CSV/HTML/PDF Reports
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-csv-html-reports
          path: ./Reports_QA/*

      - name: Upload Archived Lighthouse Results
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-full-results
          path: ./.lighthouseci/*
